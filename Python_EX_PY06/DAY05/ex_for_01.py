# ------------------------------------------------------
# 제어문 - 반복문
#  - 유사하거나 동일한 코드를 1번 작성으로 재사용 하기 위한 방법 
#  - 종류 : for, while 
# ------------------------------------------------------
## for 반복문 
## - 시퀀스 (이터러블-반복가능한-) 데이터에서 원소/요소를 하나씩 읽어올 때 사용
## - 형식
## - for 변수명 in 시퀀스 / 이터러블 데이터 :
##       반복 실행될 코드 
# ------------------------------------------------------
# [실습] 문자열에서 문자를 1줄에 1개씩 출력하기 
msg = "Merry Christmas 2025"
# 반복문을 사용하지 않을 때
# print(msg[0]) ; print(msg[1]) ; print(msg[2]) ..... 
#   m에 msg를 담는다는 뜻 m = msg[0], msg[1] ~ msg[19]
for m in msg :
    print(m, ord(m))

print('END')

# [실습 2] 1 ~ 100 범위에서 3의 배수만 저장한 리스트
data = list (range (3, 101, 3))
for th in data :
    print(th, end = ' ')

print('END')

# [실습 3] str 타입의 원소를 가지는 list
#          해당 원소를 정수로 형변환 시켜서 저장
# 원래 원소의 값을 변경해야하는 경우, 인덱스 필요 !!!!
# - 원소의 개수 konw ==> 인덱스의 범위를 알 수 있음 ==> 수의 범위를 지정할 수 있음 
data = ['4', '9', '73', '75', '78', '1', '1024']
data_int = map(int, data)

for dd in data_int :
    print(dd, end = " ")

# list에 인덱스를 가져옴 
for idx in range (len(data)) :
    print(f'idx = > {idx}')
    data[idx] = int(data[idx])